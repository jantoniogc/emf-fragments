There are two metamodels and a series of corresponding genmodels. 

The JDTAST metamodel is a metamodel for Java software projects
including classes for a full AST. This metamodel contains fragmentation annotations
that create a new fragment for each comilation unit. The JDTAST_F2 metamodel is the
same as JDTAST but it contains additional fragmentation annotations that EMFFrag 
will use to fragment models even further (each method body gets its own fragment). 
The TestMM metamodel is a simple artificial metamodel with classes necessary to test 
EMFFrag. This metamodel also contains fragmentation annotations.
All metamodels can be used for benchmarking.

There are several types of genmodels. Regular: normal EMF genmodels
with standard parameters. Reflective: EMF models that use the EMF
reflective implementation (specific methods only delegate to the reflective
implementation). CDO: for storing models in a CDO repository. Frag:
models fit for storage with EMFFrag (reflective EStore based implementation). 
The TestMM.genmodel is the frag version of the genmodels. It is named 
differently due to problems in the EMF builder generator.